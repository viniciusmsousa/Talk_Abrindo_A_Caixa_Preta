install.packages("h2o")
install.packages("lime")
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
.rs.restartR()
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
h2o.no_progress()
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
install.packages("rsample")
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ]
y <- "Attrition"
x <- setdiff(names(train_obs), y)
train_obs.h2o <- as.h2o(train_obs)
local_obs.h2o <- as.h2o(local_obs)
fit.caret <- train(
Attrition ~ .,
data = train_obs,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
fit.caret <- train(
Attrition ~ .,
data = train_obs,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
h2o_rf <- h2o.randomForest(x, y, training_frame = train_obs.h2o)
h2o_glm <- h2o.glm(x, y, training_frame = train_obs.h2o, family = "binomial")
h2o_gbm <- h2o.gbm(x, y, training_frame = train_obs.h2o)
# ranger model --> model type not built in to LIME
fit.ranger <- ranger::ranger(
Attrition ~ .,
data = train_obs,
importance = 'impurity',
probability = TRUE
)
explainer_caret <- lime(train_obs, fit.caret, n_bins = 5)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
tibble::glimpse(explanation_caret)
plot_features(explanation_caret)
plot_explanations(explanation_caret)
df
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
df %>% as_tibble()
df %>% glimpse()
h2o.init()
1024*3
h2o.init(min_mem_size = 1024*4)
1024*4
h2o.init(min_mem_size = "4096")
1024*5
h2o.init(min_mem_size = "5120")
.rs.restartR()
h2o.init(min_mem_size = "5120")
.rs.restartR()
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ]
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No"))) %>%
as_tibble()
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ]
local_obs
train_obs
fit.caret
h2o_rf
local_obs
df[index, ] %>%
mutate(Attrition = NA)
local_obs <- df[index, ] %>%
mutate(Attrition = NA)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
explanation_caret <- explain(
x = as.data.frame(local_obs),
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
local_obs <- df[index, ]
.rs.restartR()
rm(list=ls())
gc()
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ]
local_obs
class(local_obs)
y <- "Attrition"
x <- setdiff(names(train_obs), y)
train_obs.h2o <- as.h2o(train_obs)
local_obs.h2o <- as.h2o(local_obs)
fit.caret <- train(
Attrition ~ .,
data = train_obs,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
h2o_rf <- h2o.randomForest(x, y, training_frame = train_obs.h2o)
h2o_glm <- h2o.glm(x, y, training_frame = train_obs.h2o, family = "binomial")
h2o_gbm <- h2o.gbm(x, y, training_frame = train_obs.h2o)
# ranger model --> model type not built in to LIME
fit.ranger <- ranger::ranger(
Attrition ~ .,
data = train_obs,
importance = 'impurity',
probability = TRUE
)
explainer_caret <- lime(train_obs, fit.caret, n_bins = 5)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
class(explainer_caret)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
local_obs
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ]
y <- "Attrition"
x <- setdiff(names(train_obs), y)
train_obs.h2o <- as.h2o(train_obs)
local_obs.h2o <- as.h2o(local_obs)
fit.caret <- train(
Attrition ~ .,
data = train_obs,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
h2o_rf <- h2o.randomForest(x, y, training_frame = train_obs.h2o)
h2o_glm <- h2o.glm(x, y, training_frame = train_obs.h2o, family = "binomial")
h2o_gbm <- h2o.gbm(x, y, training_frame = train_obs.h2o)
# ranger model --> model type not built in to LIME
fit.ranger <- ranger::ranger(
Attrition ~ .,
data = train_obs,
importance = 'impurity',
probability = TRUE
)
explainer_caret <- lime(train_obs, fit.caret, n_bins = 5)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
explanation_caret <- explain(
x = as.tibble(local_obs),
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
explanation_caret <- explain(
x = as_tibble(local_obs),
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ]
y <- "Attrition"
x <- setdiff(names(train_obs), y)
train_obs.h2o <- as.h2o(train_obs)
local_obs.h2o <- as.h2o(local_obs)
fit.caret <- train(
Attrition ~ .,
data = train_obs,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
h2o_rf <- h2o.randomForest(x, y, training_frame = train_obs.h2o)
h2o_glm <- h2o.glm(x, y, training_frame = train_obs.h2o, family = "binomial")
h2o_gbm <- h2o.gbm(x, y, training_frame = train_obs.h2o)
# ranger model --> model type not built in to LIME
fit.ranger <- ranger::ranger(
Attrition ~ .,
data = train_obs,
importance = 'impurity',
probability = TRUE
)
explainer_caret <- lime(train_obs, fit.caret, n_bins = 5)
explanation_caret <- explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
a <- local_obs
explanation_caret <- explain(
x = a,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
local_obs
local_obs %>%
as_tibble() %>%
glimpse()
local_obs %>%
as_tibble() -> a
explanation_caret <- explain(
x = a,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
explanation_caret <- lime::explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
rm(list=ls())
.rs.restartR()
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ] %>%
mutate(Attrition = NA)
y <- "Attrition"
x <- setdiff(names(train_obs), y)
train_obs.h2o <- as.h2o(train_obs)
local_obs.h2o <- as.h2o(local_obs)
fit.caret <- train(
Attrition ~ .,
data = train_obs,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
h2o_rf <- h2o.randomForest(x, y, training_frame = train_obs.h2o)
h2o_glm <- h2o.glm(x, y, training_frame = train_obs.h2o, family = "binomial")
h2o_gbm <- h2o.gbm(x, y, training_frame = train_obs.h2o)
# ranger model --> model type not built in to LIME
fit.ranger <- ranger::ranger(
Attrition ~ .,
data = train_obs,
importance = 'impurity',
probability = TRUE
)
explainer_caret <- lime(train_obs, fit.caret, n_bins = 5)
explanation_caret <- lime::explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
tibble::glimpse(explanation_caret)
plot_explanations(explanation_caret)
plot_features(explanation_caret)
local_obs
local_obs
local_obs %>% as_tibble()
glimpse(local_obs)
plot_explanations(explanation_caret)
.rs.restartR()
lista_pacotes <- c("lime","vip","pdp","ggplot2","caret","h2o","tidyverse")
nao_instalados <- lista_pacotes[!(lista_pacotes %in% installed.packages()[,"Package"])]
if(length(nao_instalados)) install.packages(nao_instalados)
lapply(lista_pacotes,function(x){library(x,character.only=TRUE)})
rm(lista_pacotes,nao_instalados)
gc()
h2o.init()
df <- rsample::attrition %>%
dplyr::mutate_if(is.ordered, factor, ordered = FALSE) %>%
dplyr::mutate(Attrition = factor(Attrition, levels = c("Yes", "No")))
View(df)
index <- 1:5
train_obs <- df[-index, ]
local_obs <- df[index, ] %>%
mutate(Attrition = NA)
y <- "Attrition"
x <- setdiff(names(train_obs), y)
train_obs.h2o <- as.h2o(train_obs)
local_obs.h2o <- as.h2o(local_obs)
y
x
fit.caret <- train(
Attrition ~ .,
data = train_obs,
method = 'ranger',
trControl = trainControl(method = "cv", number = 5, classProbs = TRUE),
tuneLength = 1,
importance = 'impurity'
)
# create h2o models -------------------------------------------------------
h2o_rf <- h2o.randomForest(x, y, training_frame = train_obs.h2o)
h2o_glm <- h2o.glm(x, y, training_frame = train_obs.h2o, family = "binomial")
h2o_gbm <- h2o.gbm(x, y, training_frame = train_obs.h2o)
# ranger model --> model type not built in to LIME
fit.ranger <- ranger::ranger(
Attrition ~ .,
data = train_obs,
importance = 'impurity',
probability = TRUE
)
explainer_caret <- lime(train_obs, fit.caret, n_bins = 5)
explanation_caret <- lime::explain(
x = local_obs,
explainer = explainer_caret,
n_permutations = 5000,
dist_fun = "gower",
kernel_width = .75,
n_features = 10,
feature_select = "highest_weights",
labels = "Yes"
)
plot_explanations(explanation_caret)
plot_features(explanation_caret)
